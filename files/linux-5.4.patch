From b713e240cdafa6aeb2145285e7878b20344dd841 Mon Sep 17 00:00:00 2001
From: Alberto Milone <alberto.milone@canonical.com>
Date: Fri, 15 Nov 2019 10:40:17 +0100
Subject: [PATCH 1/1] Add support for Linux 5.4

These changes come from the 440.31 driver.
---
 Kbuild                       | 14 ++++++++---
 conftest.sh                  | 48 +++++++++++++++++++++++++++++++++++-
 nvidia-drm/nvidia-drm-drv.c  |  6 ++++-
 nvidia-drm/nvidia-drm.Kbuild |  1 +
 4 files changed, 64 insertions(+), 5 deletions(-)

diff --git a/Kbuild b/Kbuild
index 1e79d0b..b459908 100644
--- a/Kbuild
+++ b/Kbuild
@@ -26,11 +26,19 @@
 # $(1): The object files.
 # $(2): The CFLAGS to add for those object files.
 #
-
+# With kernel git commit 54b8ae66ae1a3454a7645d159a482c31cd89ab33, the
+# handling of object-specific CFLAGs, CFLAGS_$(object) has changed. Prior to
+# this commit, the CFLAGS_$(object) variable was required to be defined with
+# only the the object name (<CFLAGS_somefile.o>). With the aforementioned git
+# commit, it is now required to give Kbuild relative paths along-with the
+# object name (CFLAGS_<somepath>/somefile.o>). As a result, CFLAGS_$(object)
+# is set twice, once with a relative path to the object files and once with
+# just the object files.
+#
 ASSIGN_PER_OBJ_CFLAGS = \
  $(foreach _cflags_variable, \
- $(addprefix CFLAGS_,$(notdir $(1))), \
- $(eval $(_cflags_variable) += $(2)))
+ $(notdir $(1)) $(1), \
+ $(eval $(addprefix CFLAGS_,$(_cflags_variable)) += $(2)))
 
 
 #
diff --git a/conftest.sh b/conftest.sh
index c00c826..b957ffe 100755
--- a/conftest.sh
+++ b/conftest.sh
@@ -196,6 +196,23 @@ build_cflags() {
     if [ -n "$BUILD_PARAMS" ]; then
         CFLAGS="$CFLAGS -D$BUILD_PARAMS"
     fi
+
+    # Check if gcc supports asm goto and set CC_HAVE_ASM_GOTO if it does.
+    # Older kernels perform this check and set this flag in Kbuild, and since
+    # conftest.sh runs outside of Kbuild it ends up building without this flag.
+    # Starting with commit e9666d10a5677a494260d60d1fa0b73cc7646eb3 this test
+    # is done within Kconfig, and the preprocessor flag is no longer needed.
+
+    GCC_GOTO_SH="$SOURCES/build/gcc-goto.sh"
+
+    if [ -f "$GCC_GOTO_SH" ]; then
+        # Newer versions of gcc-goto.sh don't print anything on success, but
+        # this is okay, since it's no longer necessary to set CC_HAVE_ASM_GOTO
+        # based on the output of those versions of gcc-goto.sh.
+        if [ `/bin/sh "$GCC_GOTO_SH" "$CC"` = "y" ]; then
+            CFLAGS="$CFLAGS -DCC_HAVE_ASM_GOTO"
+        fi
+    fi
 }
 
 CONFTEST_PREAMBLE="#include \"conftest/headers.h\"
@@ -3214,6 +3231,35 @@ compile_test() {
         # <function> was added|removed|etc by commit <sha> ("<commit message")
         # in <kernel-version> (<commit date>).
 
+        drm_driver_prime_flag_present)
+            #
+            # Determine whether driver feature flag DRIVER_PRIME is present.
+            #
+            # The DRIVER_PRIME flag was added by commit 3248877ea179 (drm:
+            # base prime/dma-buf support (v5)) in v3.4 (2011-11-25) and is
+            # removed by commit 0424fdaf883a (drm/prime: Actually remove
+            # DRIVER_PRIME everywhere) on 2019-06-17.
+            #
+            # DRIVER_PRIME definition moved from drmP.h to drm_drv.h by
+            # commit 85e634bce01a (drm: Extract drm_drv.h) in v4.10
+            # (2016-11-14).
+            #
+            # DRIVER_PRIME define is changed to enum value by commit
+            # 0e2a933b02c9 (drm: Switch DRIVER_ flags to an enum) in v5.1
+            # (2019-01-29).
+            #
+            CODE="
+            #include <drm/drmP.h>
+            #if defined(NV_DRM_DRM_DRV_H_PRESENT)
+            #include <drm/drm_drv.h>
+            #endif
+            unsigned int drm_driver_prime_flag_present_conftest(void) {
+                return DRIVER_PRIME;
+            }"
+
+            compile_check_conftest "$CODE" "NV_DRM_DRIVER_PRIME_FLAG_PRESENT" "" "types"
+        ;;
+
         *)
             # Unknown test name given
             echo "Error: unknown conftest '$1' requested" >&2
@@ -3585,7 +3631,7 @@ case "$5" in
         TAB='	'
 
         if [ -f "$OUTPUT/Module.symvers" ] && \
-             grep -e "^[^${TAB}]*${TAB}[^${TAB}]*${TAB}vmlinux" \
+             grep -e "^[^${TAB}]*${TAB}[^${TAB}]*${TAB}\+vmlinux" \
                      "$OUTPUT/Module.symvers" >/dev/null 2>&1; then
             exit 0
         fi
-- 
2.20.1

